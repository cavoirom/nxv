{"version":3,"sources":["worker.js"],"names":["cacheName","preCacheRoutes","self","addEventListener","event","waitUntil","caches","open","then","cache","console","log","addAll","respondWith","match","request","cachedResponse","fetch","response","status","type","toBeCachedResponse","clone","put"],"mappings":";AAAA,IAAMA,EAAY,KACZC,EAAiB,CAAC,IAAK,eAE7BC,KAAKC,iBAAiB,UAAW,SAAUC,GACzCA,EAAMC,UACJC,OAAOC,KAAKP,GAAWQ,KAAK,SAAUC,GAE7BA,OADPC,QAAQC,IAAI,+BAAgCV,GACrCQ,EAAMG,OAAOX,QAK1BC,KAAKC,iBAAiB,QAAS,SAAUC,GACvCA,EAAMS,YACJP,OAAOQ,MAAMV,EAAMW,SAASP,KAAK,SAAUQ,GAErCA,OAAAA,GAIGC,MAAMb,EAAMW,SAASP,KAAK,SAAUU,GAErC,IAACA,GAAgC,MAApBA,EAASC,QAAoC,UAAlBD,EAASE,KAC5CF,OAAAA,EAOHG,IAAAA,EAAqBH,EAASI,QAM7BJ,OAJPZ,OAAOC,KAAKP,GAAWQ,KAAK,SAAUC,GACpCA,EAAMc,IAAInB,EAAMW,QAASM,KAGpBH","file":"worker.js","sourceRoot":"../src/app","sourcesContent":["const cacheName = 'v1';\nconst preCacheRoutes = ['/', '/index.html'];\n\nself.addEventListener('install', function (event) {\n  event.waitUntil(\n    caches.open(cacheName).then(function (cache) {\n      console.log('Pre-cache listed resources: ', preCacheRoutes);\n      return cache.addAll(preCacheRoutes);\n    }),\n  );\n});\n\nself.addEventListener('fetch', function (event) {\n  event.respondWith(\n    caches.match(event.request).then(function (cachedResponse) {\n      // Cache hit - return response\n      if (cachedResponse) {\n        return cachedResponse;\n      }\n\n      return fetch(event.request).then(function (response) {\n        // Check if we received a valid response\n        if (!response || response.status !== 200 || response.type !== 'basic') {\n          return response;\n        }\n\n        // IMPORTANT: Clone the response. A response is a stream\n        // and because we want the browser to consume the response\n        // as well as the cache consuming the response, we need\n        // to clone it so we have two streams.\n        const toBeCachedResponse = response.clone();\n\n        caches.open(cacheName).then(function (cache) {\n          cache.put(event.request, toBeCachedResponse);\n        });\n\n        return response;\n      });\n    }),\n  );\n});\n"]}