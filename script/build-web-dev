#!/usr/bin/env bash

set -e
set -o pipefail
set -v

SCRIPT_DIRECTORY="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

source "$SCRIPT_DIRECTORY/utilities"

PROJECT_DIRECTORY="$( absolute_path "${SCRIPT_DIRECTORY}/.." )"
WEB_DIRECTORY="${PROJECT_DIRECTORY}/web"
BUILD_DIRECTORY="${WEB_DIRECTORY}/build"

CACHE_DIRECTORY="${PROJECT_DIRECTORY}/.cache"
DENO_DIRECTORY="${CACHE_DIRECTORY}/deno"

# Client up build directory.
rm -rf "${BUILD_DIRECTORY}"
mkdir -p "${BUILD_DIRECTORY}"

# bundle the app to index.js.
DENO_DIR="${DENO_DIRECTORY}" deno run \
    --config "${PROJECT_DIRECTORY}/deno.jsonc" \
    --allow-read \
    --allow-run \
    --allow-env \
    --allow-write \
    "${WEB_DIRECTORY}/bundler/bundler.js" \
    --import-map "${PROJECT_DIRECTORY}/import-map.json" \
    --entrypoint "${WEB_DIRECTORY}/app/index.js" \
    --out-file "${WEB_DIRECTORY}/build/dist/index.js"

# bundle worker.js
DENO_DIR="${DENO_DIRECTORY}" deno run \
    --config "${PROJECT_DIRECTORY}/deno.jsonc" \
    --allow-read \
    --allow-run \
    --allow-env \
    --allow-write \
    "${WEB_DIRECTORY}/bundler/bundler.js" \
    --import-map "${PROJECT_DIRECTORY}/import-map.json" \
    --entrypoint "${WEB_DIRECTORY}/app/worker.js" \
    --out-file "${WEB_DIRECTORY}/build/dist/worker.js"

# bundle css to index.css.
sass --style compressed "$WEB_DIRECTORY/app/index.scss" "$WEB_DIRECTORY/build/dist/index.css"

# copy static content.
cp "$WEB_DIRECTORY/app/favicon.ico" "$WEB_DIRECTORY/build/dist/"
cp "$WEB_DIRECTORY/app/manifest.webmanifest" "$WEB_DIRECTORY/build/dist/"
cp "$WEB_DIRECTORY/app/index.html" "$WEB_DIRECTORY/build/dist/"
cp "$WEB_DIRECTORY/content/static/CNAME" "$WEB_DIRECTORY/build/dist/"
cp "$WEB_DIRECTORY/content/static/robots.txt" "$WEB_DIRECTORY/build/dist/"

# generate site from content.
DENO_DIR="${DENO_DIRECTORY}" deno run \
    --config "$PROJECT_DIRECTORY/deno.jsonc" \
    --allow-read \
    --allow-write \
    --allow-env \
    "$WEB_DIRECTORY/generator/generator.js"
